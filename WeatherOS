<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>날씨 정보 웹앱</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    #map { height: 300px; border-radius: 0.75rem; }
  </style>
</head>
<body class="bg-blue-100 min-h-screen flex flex-col items-center justify-center p-4">

  <div class="w-full max-w-md bg-white rounded-2xl shadow-xl p-6 space-y-4">
    <h1 class="text-2xl font-bold text-center">🌤️ 날씨 정보 웹앱</h1>

    <p id="status" class="text-sm text-gray-600 text-center"> 도시명을 입력하거나 지도를 클릭하여 날씨를 알 수 있습니다.</p>

    <div class="flex gap-2">
      <input id="cityInput" type="text" placeholder="도시 이름 입력" class="w-full px-4 py-2 border rounded-md">
      <button onclick="searchCityWeather()" class="bg-blue-500 text-white px-4 py-2 rounded-md">검색</button>
    </div>

    <div id="weather" class="space-y-2 text-center text-gray-700"></div>

    <div id="map" class="mt-4"></div>
  </div>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <script>
    const API_KEY = '87362b1762ed0f343516e4d960a2d417';
    let map, marker;

    function initMap(lat, lon) {
      if (!map) {
        map = L.map('map').setView([lat, lon], 10);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        map.on('click', function (e) {
          const { lat, lng } = e.latlng;
          if (marker) map.removeLayer(marker);
          marker = L.marker([lat, lng]).addTo(map);
          document.getElementById('status').textContent = `🗺️ 선택한 위치의 날씨입니다.`;
          getWeather(lat, lng);
        });
      } else {
        map.setView([lat, lon], 10);
        if (marker) map.removeLayer(marker);
        marker = L.marker([lat, lon]).addTo(map);
      }
    }

    window.onload = () => {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((pos) => {
          const lat = pos.coords.latitude;
          const lon = pos.coords.longitude;
          getWeather(lat, lon);
          initMap(lat, lon);
        }, () => {
          document.getElementById('status').textContent = '⚠️ 위치 정보를 가져올 수 없습니다.';
          initMap(37.5665, 126.9780);
        });
      }
    };

    function searchCityWeather() {
      const city = document.getElementById('cityInput').value;
      if (!city) return;
      fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`)
        .then(res => res.json())
        .then(data => {
          if (data.length === 0) {
            alert('도시를 찾을 수 없습니다!');
            return;
          }
          const { lat, lon } = data[0];
          getWeather(lat, lon);
          initMap(lat, lon);
        });
    }

    function getWeather(lat, lon) {
      Promise.all([
        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=kr&appid=${API_KEY}`).then(res => res.json()),
        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&cnt=24&lang=kr&appid=${API_KEY}`).then(res => res.json())
      ]).then(([current, forecast]) => {
        showWeather(current, forecast);
      });
    }

    function showWeather(current, forecast) {
      const weatherDiv = document.getElementById('weather');
      const forecastHTML = forecast.list
        .filter((_, i) => i % 8 === 0)
        .slice(0, 3)
        .map(item => `
          <div class="border rounded p-2 bg-gray-100">
            <p class="font-semibold">${new Date(item.dt_txt).toLocaleDateString('ko-KR')}</p>
            <p>${item.weather[0].description}</p>
            <p>🌡️ ${item.main.temp}°C</p>
          </div>
        `).join('');

      weatherDiv.innerHTML = `
        <h2 class="text-xl font-semibold">📍 ${current.name}</h2>
        <p class="text-lg">${current.weather[0].description} / 🌡️ ${current.main.temp}°C</p>
        <h3 class="mt-4 font-semibold">🗓️ 3일 예보</h3>
        <div class="grid grid-cols-3 gap-2 mt-2">${forecastHTML}</div>
      `;
    }
  </script>
</body>
</html>
